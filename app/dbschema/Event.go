//Do not edit this file, which is automatically generated by the generator.
package dbschema

import (
	"github.com/webx-top/db"
	"github.com/webx-top/db/lib/factory"
	
	"time"
)

type Event struct {
	trans	*factory.Transaction
	objects []*Event
	
	Id       	uint64  	`db:"id,omitempty,pk" bson:"id,omitempty" comment:"" json:"id" xml:"id"`
	Name     	string  	`db:"name" bson:"name" comment:"名称:add,del,edit" json:"name" xml:"name"`
	Target   	string  	`db:"target" bson:"target" comment:"目标:magazine,book,article" json:"target" xml:"target"`
	TargetId 	uint64  	`db:"target_id" bson:"target_id" comment:"目标id" json:"target_id" xml:"target_id"`
	Memo     	string  	`db:"memo" bson:"memo" comment:"说明" json:"memo" xml:"memo"`
	Created  	uint    	`db:"created,omitempty" bson:"created,omitempty" comment:"创建时间" json:"created" xml:"created"`
	Finished 	uint    	`db:"finished,omitempty" bson:"finished,omitempty" comment:"完成时间" json:"finished" xml:"finished"`
}

func (this *Event) Trans() *factory.Transaction {
	return this.trans
}

func (this *Event) Use(trans *factory.Transaction) factory.Model {
	this.trans = trans
	return this
}

func (this *Event) Objects() []*Event {
	if this.objects == nil {
		return nil
	}
	return this.objects[:]
}

func (this *Event) NewObjects() *[]*Event {
	this.objects = []*Event{}
	return &this.objects
}

func (this *Event) Param() *factory.Param {
	return factory.NewParam(factory.DefaultFactory).SetTrans(this.trans).SetCollection("event").SetModel(this)
}

func (this *Event) Get(mw func(db.Result) db.Result, args ...interface{}) error {
	return this.Param().SetArgs(args...).SetRecv(this).SetMiddleware(mw).One()
}

func (this *Event) List(recv interface{},mw func(db.Result) db.Result, page, size int, args ...interface{}) (func() int64, error) {
	if recv == nil {
		recv = this.NewObjects()
	}
	return this.Param().SetArgs(args...).SetPage(page).SetSize(size).SetRecv(recv).SetMiddleware(mw).List()
}

func (this *Event) ListByOffset(recv interface{},mw func(db.Result) db.Result, offset, size int, args ...interface{}) (func() int64, error) {
	if recv == nil {
		recv = this.NewObjects()
	}
	return this.Param().SetArgs(args...).SetOffset(offset).SetSize(size).SetRecv(recv).SetMiddleware(mw).List()
}

func (this *Event) Add() (interface{}, error) {
	this.Created = uint(time.Now().Unix())
	return this.Param().SetSend(this).Insert()
}

func (this *Event) Edit(mw func(db.Result) db.Result, args ...interface{}) error {
	
	return this.Param().SetArgs(args...).SetSend(this).SetMiddleware(mw).Update()
}

func (this *Event) Delete(mw func(db.Result) db.Result, args ...interface{}) error {
	
	return this.Param().SetMiddleware(mw).Delete()
}

